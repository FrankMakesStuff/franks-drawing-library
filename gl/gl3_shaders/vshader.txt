#version 330 core

layout (location = 0) in vec3 aPos;   		// the position variable has attribute position 0
layout (location = 1) in vec3 aNormal; 		// the normal variable has attribute position 1
layout (location = 2) in vec2 aTexCoord;	// the texture coords has attribute position 2

out vec3 FragPos;  // output fragment position to the fragment shader
out vec3 Normal;   // output fragment normal
out vec2 TexCoord; // output texcoords to the fragment shader
out mat4 matTransform;

// transformation matrices
uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;
uniform mat3 normal_matrix;

void main()
{
	FragPos = vec3( model * vec4( aPos, 1.0 ) );
	Normal = normal_matrix * aNormal; // (note: normal_matrix should be calc'd on the cpu)
    TexCoord = aTexCoord;
    gl_Position = projection * view * model * vec4(aPos, 1.0f);
    matTransform = projection * view;
} 
